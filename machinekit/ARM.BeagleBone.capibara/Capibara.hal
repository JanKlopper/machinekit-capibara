# configuration for 3-axis gantry router with tandem motors on the x-axis
# also supports a Logitech F310 Gamepad as a jog pendant if loaded by custom_postgui.hal

# Launch the setup script to make sure hardware setup looks good
loadusr -w ./setup.sh

loadrt trivkins
# trajectory planner
loadrt tp
loadrt [EMCMOT]EMCMOT base_period_nsec=[EMCMOT]BASE_PERIOD servo_period_nsec=[EMCMOT]SERVO_PERIOD traj_period_nsec=[EMCMOT]SERVO_PERIOD key=[EMCMOT]SHMEM_KEY num_joints=[TRAJ]AXES tp=tp kins=trivkins
#loadrt probe_parport
#loadrt hal_parport cfg=0x378
#setp parport.0.reset-time 5000
#loadrt stepgen step_type=0,0,0
# loadrt threads fp1=0 name1=fast period1=50000 name2=slow period2=1000000

loadrt hal_bb_gpio output_pins=113,116 input_pins=108,114,115,117,118
loadrt [PRUCONF](DRIVER) prucode=$(HAL_RTMOD_DIR)/[PRUCONF](PRUBIN) [PRUCONF](CONFIG) halname=hpg
#loadrt gantry count=1 personality=2
newinst gantry gantry.0 pincount=2

addf hpg.capture-position                 servo-thread
addf bb_gpio.read                         servo-thread
addf gantry.0.read                        servo-thread
addf motion-command-handler               servo-thread
addf motion-controller                    servo-thread
addf gantry.0.write                       servo-thread
addf hpg.update                           servo-thread
addf bb_gpio.write                        servo-thread


# setup GPIO polarity
setp bb_gpio.p8.in-08.invert 0 # y limit
setp bb_gpio.p8.in-14.invert 0 # z limit
setp bb_gpio.p8.in-15.invert 1 # e-stop
setp bb_gpio.p8.in-17.invert 0 # x2 limit
setp bb_gpio.p8.in-18.invert 0 # X1 limit


# set up the axis parameters and create the axis signals

# x-axis gantry setup
net x1pos-cmd gantry.0.joint.00.pos-cmd => hpg.stepgen.00.position-cmd
net x1pos-fb  gantry.0.joint.00.pos-fb  <= hpg.stepgen.00.position-fb
net x2pos-cmd gantry.0.joint.01.pos-cmd => hpg.stepgen.03.position-cmd
net x2pos-fb  gantry.0.joint.01.pos-fb  <= hpg.stepgen.03.position-fb
net xpos-cmd  gantry.0.position-cmd	<= axis.0.motor-pos-cmd
net xpos-fb   gantry.0.position-fb 	=> axis.0.motor-pos-fb
#setp gantry.0.search-vel [AXIS_0]HOME_SEARCH_VEL
net xenable axis.0.amp-enable-out => hpg.stepgen.00.enable hpg.stepgen.03.enable

# x1-axis
setp hpg.stepgen.00.position-scale [AXIS_0]SCALE
setp hpg.stepgen.00.steplen 2000
setp hpg.stepgen.00.stepspace 2000
setp hpg.stepgen.00.dirhold 35000
setp hpg.stepgen.00.dirsetup 35000
setp hpg.stepgen.00.maxaccel [AXIS_0]STEPGEN_MAXACCEL

setp hpg.stepgen.00.steppin         142
setp hpg.stepgen.00.dirpin          143

# x2-axis
setp hpg.stepgen.03.position-scale [AXIS_0]SCALE
setp hpg.stepgen.03.steplen 2000
setp hpg.stepgen.03.stepspace 2000
setp hpg.stepgen.03.dirhold 35000
setp hpg.stepgen.03.dirsetup 35000
setp hpg.stepgen.03.maxaccel [AXIS_0]STEPGEN_MAXACCEL

setp hpg.stepgen.03.steppin         52
setp hpg.stepgen.03.dirpin          147

# y-axis
setp hpg.stepgen.01.position-scale [AXIS_1]SCALE
setp hpg.stepgen.01.steplen 2000
setp hpg.stepgen.01.stepspace 2000
setp hpg.stepgen.01.dirhold 35000
setp hpg.stepgen.01.dirsetup 35000
setp hpg.stepgen.01.maxaccel [AXIS_1]STEPGEN_MAXACCEL
net ypos-cmd  axis.1.motor-pos-cmd		=> hpg.stepgen.01.position-cmd
net ypos-fb   hpg.stepgen.01.position-fb 	=> axis.1.motor-pos-fb
net yenable axis.1.amp-enable-out => hpg.stepgen.01.enable

setp hpg.stepgen.01.steppin         144
setp hpg.stepgen.01.dirpin          145

# z-axis
setp hpg.stepgen.02.position-scale [AXIS_2]SCALE
setp hpg.stepgen.02.steplen 2000
setp hpg.stepgen.02.stepspace 2000
setp hpg.stepgen.02.dirhold 35000
setp hpg.stepgen.02.dirsetup 35000
setp hpg.stepgen.02.maxaccel [AXIS_2]STEPGEN_MAXACCEL
net zpos-cmd axis.2.motor-pos-cmd => hpg.stepgen.02.position-cmd
net zpos-fb hpg.stepgen.02.position-fb => axis.2.motor-pos-fb
net zenable axis.2.amp-enable-out => hpg.stepgen.02.enable

setp hpg.stepgen.02.steppin         39
setp hpg.stepgen.02.dirpin          149


# debounce the y-axis switches and connect them to signals
net switches-x1		<= bb_gpio.p8.in-18
net switches-x2 	<= bb_gpio.p8.in-17

# join the home switch signals so that both switches have to be closed to trigger a home position
net switches-x1		=> gantry.0.joint.00.home
net switches-x2		=> gantry.0.joint.01.home
#net home-x 		<= gantry.0.home
#net home-x 		=> axis.0.home-sw-in
net limit-x		<= gantry.0.limit
net limit-x		=> axis.0.neg-lim-sw-in
#net switches-x1	=> axis.0.pos-lim-sw-in


# set up the other home and limit switches
net switches-y 		<= bb_gpio.p8.in-08
#net switches-y		=> axis.1.home-sw-in
#net switches-y		=> axis.1.neg-lim-sw-in

net switches-z 		<= bb_gpio.p8.in-14
#net switches-z 	=> axis.2.home-sw-in
#net switches-z		=> axis.2.pos-lim-sw-in

# connect the shop vac to the flood coolant signal
net flood => iocontrol.0.coolant-flood
net flood => bb_gpio.p8.out-13

# set up the e-stop switch
net estop-ext <= bb_gpio.p8.in-15
net estop-ext => iocontrol.0.emc-enable-in

#net estop-out <= iocontrol.0.user-enable-out
#net estop-out => iocontrol.0.emc-enable-in

net estop-out <= iocontrol.0.user-enable-out

loadusr -Wn huanyangvfd huanyangvfd.py
net hy-fwd <= motion.spindle-forward => huanyangvfd.spindle_fwd
net hy-rev <= motion.spindle-reverse => huanyangvfd.spindle_rev
net hy-on <= motion.spindle-on => huanyangvfd.spindle_on
net hy-speed <= motion.spindle-speed-out => huanyangvfd.speed

loadusr -W hal_manualtoolchange
net tool-change iocontrol.0.tool-change => hal_manualtoolchange.change
net tool-changed iocontrol.0.tool-changed <= hal_manualtoolchange.changed
net tool-number iocontrol.0.tool-prep-number => hal_manualtoolchange.number
net tool-prepare-loopback iocontrol.0.tool-prepare => iocontrol.0.tool-prepared

#enable the spindle once the GUI is setup
loadusr -Wn huanyangvfdpanel pyvcp -c huanyangvfdpanel panel.xml

#custom python interface gui
net hy-RPM <= huanyangvfd.Rott => huanyangvfdpanel.spindle-speed
net hy-AMPS <= huanyangvfd.OutA => huanyangvfdpanel.amp-meter
net hy-Base-Freq <= huanyangvfd.base-freq => huanyangvfdpanel.base-freq
net hy-Max-Freq <= huanyangvfd.max-freq => huanyangvfdpanel.max-freq
net hy-Freq-Lower <= huanyangvfd.freq-lower-limit => huanyangvfdpanel.freq-lower-limit
net hy-Motor-Voltage <= huanyangvfd.rated-motor-voltage => huanyangvfdpanel.rated-motor-voltage
#net hy-Motor-Current <= huanyangvfd.rated-motor-current => huanyangvfdpanel.rated-motor-current
#net hy-Motor-Poles <= huanyangvfd.motor-pole-number => huanyangvfdpanel.motor-pole-number
net hy-Motor-Rev <= huanyangvfd.rated-motor-rev => huanyangvfdpanel.rated-motor-rev
net hy-Modbus-OK <= huanyangvfd.modbus-ok => huanyangvfdpanel.modbus-ok
#net hy-Freq-Cmd <= huanyangvfd.freq_cmd => huanyangvfdpanel.frequency-command

#net hy-CNST-Run <=huanyangvfd.CNST-run => huanyangvfdpanel.CNST-run
#net hy-CNST-Jog <= huanyangvfd.CNST-jog => huanyangvfdpanel.CNST-jog
#net hy-CNST-Command-rf <= spindle-vfd.CNST-command-rf => huanyangvfdpanel.CNST-command-rf
#net hy-CNST-Runnning <= spindle-vfd.CNST-running => huanyangvfdpanel.CNST-running
#net hy-CNST-Jogging <= spindle-vfd.CNST-jogging => huanyangvfdpanel.CNST-jogging
#net hy-CNST-Running-rf <= spindle-vfd.CNST-running-rf => huanyangvfdpanel.CNST-running-rf
#net hy-CNST-Bracking <= spindle-vfd.CNST-bracking => huanyangvfdpanel.CNST-bracking
#net hy-CNST-Track-Start <= spindle-vfd.CNST-track-start => huanyangvfdpanel.CNST-track-start

# now enable the VFD after EMC is up and running
#setp huanyangvfd.enable 1

# DRO connections
net DRO-Xpos <= axis.0.joint-pos-cmd => huanyangvfdpanel.Xdisplay
net DRO-Ypos <= axis.1.joint-pos-cmd => huanyangvfdpanel.Ydisplay
net DRO-Zpos <= axis.2.joint-pos-cmd => huanyangvfdpanel.Zdisplay


